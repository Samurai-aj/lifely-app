stages: 
    - build
    - test
    - package
    - staging
    - staging-test
    - prod-deploy
    - prod-test

variables:
    url : http://localhost:8501
    APP_VERSION: $CI_PIPELINE_IID
    TEST_STAGING_URL: https://lifely-app-staging.herokuapp.com
    PROD_STAGING_URL: https://lifely-proper.herokuapp.com
    HEROKU_PROD_APP: lifely-proper

    


build_project:
    #image: python:3.8.10-slim
    image: python:3.8.10-slim
    stage: build
    #start application in the background
    script: 
        - pip install -r requirements.txt
        - streamlit run heart_disease_app.py &
        
        
# additionally build docker image and push image to dockerhub
build docker image:
    stage: package
    image: docker:20.10.12
    rules:
        - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    services:
        -  docker:20.10.12-dind
    before_script: 
        - echo $DOCKERHUB_ACCESSTOKEN | docker login -u $DOCKERHUB_USER --password-stdin
    script:
        - docker build -t ocheotobo/lifely:$APP_VERSION .
        - docker push ocheotobo/lifely:$APP_VERSION


#deploy to app using ruby dpl toolkit to staging server
deploy staging:
    stage: staging
    image: ruby:latest
    rules:
        #only run if the branch=master
        - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    script:
        - gem install dpl
        - dpl --provider=heroku --api_key=$HEROKU_API_KEY --app=$HEROKU_STAGING_APP_NAME
        

#test the image using curl running on the dev server
staging-test:
    stage: staging-test
    image:  curlimages/curl
    rules:
        - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    script:
        - curl $TEST_STAGING_URL

#deploy app using ruby dpl toolkitt o production
deploy to prod:
    stage: prod-deploy 
    image: ruby:latest
    when: manual
    rules:
        #only run if branch=master
        - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    script:
        - gem install dpl 
        - dpl --provider=heroku --api_key=$HEROKU_API_KEY --app=$HEROKU_APP_NAME


#perform test on prod server using curl
prod test:
    stage: prod-test
    image: curlimages/curl
    when: manual
    rules:
        - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    script: 
        - curl $PROD_STAGING_URL 


    
        

